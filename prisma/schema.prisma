// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Baby {
  id                      String   @id @default(cuid())
  name                    String
  birthDate               DateTime
  birthTime               String?
  gender                  String   // 'boy' or 'girl'
  avatar                  String?  // 头像URL
  birthWeight             Float?
  birthHeight             Float?
  birthHeadCircumference  Float?
  bloodType               String?
  allergies               String?
  notes                   String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  // Relations
  growthRecords   GrowthRecord[]
  milestones      Milestone[]
  mediaItems      MediaItem[] // Changed from photos Photo[]

  @@map("babies")
}

model GrowthRecord {
  id                  String   @id @default(cuid())
  babyId              String
  date                DateTime
  weight              Float?
  height              Float?
  headCircumference   Float?
  notes               String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  baby                Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)

  @@map("growth_records")
  @@index([babyId, date])
}

model Milestone {
  id          String   @id @default(cuid())
  babyId      String
  date        DateTime
  title       String
  description String?
  tags        String[] // Array of tag strings for categorization
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  baby        Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)

  @@map("milestones")
  @@index([babyId, date])
}

model MediaItem {
  id          String   @id @default(cuid())
  babyId      String
  date        DateTime
  title       String
  description String?
  url         String    // URL of the web-friendly (converted) media
  mediaType   String    // "IMAGE" or "VIDEO"
  format      String?   // e.g., HEIC, JPEG, MOV, MP4
  thumbnailUrl String?  // Optional: for video thumbnails
  duration     Int?     // Optional: for video duration in seconds
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  baby        Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)

  @@map("media_items") // Changed from "photos"
  @@index([babyId, date])
}
